@using ItemHub.Models.Auth
@model LoginModel

<div class="text-center">

<h2>Авторизация</h2>

    <form asp-action="Login" asp-controller="Account" asp-anti-forgery="true" method="post" class="row mt-3 needs-validation" novalidate>
        <div class="validation" asp-validation-summary="ModelOnly"></div>
        <div class="col-sm-3 m-auto">
            <div>
                <label asp-for="Login">Логин или Email:</label><br />
                <input type="text" asp-for="Login" class="form-control" required />
                <div class="invalid-feedback">
                    Введите логин или email.
                </div>
                @Html.ValidationMessageFor(x => x.Login)
            </div>
            <div>
                <label asp-for="Password">Пароль:</label><br />
                <div class="position-relative has-validation">
                    <input type="password" asp-for="Password" class="form-control" id="password-input" required>
                    <a class="password-control" style="top: 10px;" onclick="return show_hide_password(this);"></a>
                    <div class="invalid-feedback">
                        Введите пароль.
                    </div>
                    @Html.ValidationMessageFor(x => x.Password)
                </div>
            </div>
            <div>
                <br/>
                <input class="btn btn-primary" type="submit" value="Войти" />
            </div>
        </div>
    </form>
    <a asp-action="Register" asp-controller="Account">Создать аккаунт</a>
</div>

<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })()
</script>