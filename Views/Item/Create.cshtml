@using ItemHub.Models.OnlyItem
@model ItemModel

<div class="text-center">

<h2>Создайте свой item</h2>

    <form asp-action="Create" asp-controller="Item" method="post" enctype="multipart/form-data" class="row mt-3 needs-validation" novalidate>
        <div class="validation" asp-validation-summary="ModelOnly"></div>
        <div class ="mb-3 col-sm-7 m-auto">
            <div>
                <div>
                    <label asp-for="Title">Название:</label><br />
                    <input type="text" asp-for="Title" name="Title" class="form-control" required/>
                    <div class="invalid-feedback">
                        Введите название товара.
                    </div>
                    @Html.ValidationMessageFor(x => x.Title)
                </div>
                <div>
                    <label asp-for="Description">Описание:</label><br />
                    <textarea asp-for="Description" rows="3" class="form-control mb-3"></textarea>
                </div>
                <div>
                    <input asp-for="Images" type="file" name="Images" class="form-control" accept="image/jpg,image/jpeg,image/png" min="1" maxlength="2" max="10" multiple /><br>   
                </div>
                <div class="input-group mb-3">
                    <input asp-for="Price" type="number" class="form-control" required />
                    <span class="input-group-text">$</span>
                    <div class="invalid-feedback">
                        Введите цену.
                    </div>
                </div>
                @Html.ValidationMessageFor(x => x.Price)
            </div>
            <input class="btn btn-primary" type="submit" value="Загрузить" />
        </div>
    </form>
</div>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })()
</script>